From c7a806adbd809adb74149e69ea8866564ec5e67a Mon Sep 17 00:00:00 2001
From: Yongxin Liu <yongxin.liu@windriver.com>
Date: Wed, 3 Jul 2024 15:34:57 +0000
Subject: [PATCH] rdk/snr: use dev_addr_set() instead of memcpy()

After kernel commit d07b26f5bbea ("dev_addr: add a modification
check"), netdev->dev_addr should only be modified via helper function
dev_addr_set().

ether_address_set() is a inline function which will triger dev_addr_set().

Fix the following call trace when loading adk_netd.ko.

  Call Trace:
   <TASK>
   ? show_regs+0x69/0x80
   ? __warn+0x89/0x160
   ? dev_addr_check+0xa4/0x110
   ? report_bug+0x171/0x1a0
   ? __irq_work_queue_local+0x39/0xe0
   ? handle_bug+0x42/0x80
   ? exc_invalid_op+0x1c/0x70
   ? asm_exc_invalid_op+0x1f/0x30
   ? dev_addr_check+0xa4/0x110
   __dev_open+0x43/0x1b0
   __dev_change_flags+0x1b3/0x220
   dev_change_flags+0x2b/0x70
   do_setlink+0x36e/0x1200
   ? __nla_validate_parse+0x5a/0xda0
   __rtnl_newlink+0x6f8/0xb30
   ? __kmem_cache_alloc_node+0x413/0x550
   ? rtnl_newlink+0x33/0x70
   rtnl_newlink+0x4c/0x70
   rtnetlink_rcv_msg+0x14d/0x3d0
   ? netlink_ack+0x1f7/0x570
   ? __pfx_rtnetlink_rcv_msg+0x10/0x10
   netlink_rcv_skb+0x61/0x110
   rtnetlink_rcv+0x19/0x20
   netlink_unicast+0x245/0x390
   netlink_sendmsg+0x22d/0x4a0
   ____sys_sendmsg+0x2e8/0x340
   ___sys_sendmsg+0x9a/0xe0
   __sys_sendmsg+0x89/0xe0
   __x64_sys_sendmsg+0x21/0x30
   x64_sys_call+0x1712/0x1c90
   do_syscall_64+0x41/0x90
   entry_SYSCALL_64_after_hwframe+0x78/0xe2

Upstream-Status: Inappropriate [RDK is released in tarball only]

Signed-off-by: Yongxin Liu <yongxin.liu@windriver.com>
---
 klm/netd/adk_netd_init.c | 2 +-
 klm/netd/adk_netd_main.c | 4 ++--
 2 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/klm/netd/adk_netd_init.c b/klm/netd/adk_netd_init.c
index 1d43a9a..f615312 100644
--- a/klm/netd/adk_netd_init.c
+++ b/klm/netd/adk_netd_init.c
@@ -164,7 +164,7 @@ adk_netd_set_mac_address(struct net_device *netdev, void *p)
 	if (!is_valid_ether_addr(addr->sa_data))
 		return -EADDRNOTAVAIL;
 
-	memcpy(netdev->dev_addr, addr->sa_data, netdev->addr_len);
+	ether_address_set(netdev, addr->sa_data);
 	return 0;
 }
 
diff --git a/klm/netd/adk_netd_main.c b/klm/netd/adk_netd_main.c
index 108c069..984ea94 100644
--- a/klm/netd/adk_netd_main.c
+++ b/klm/netd/adk_netd_main.c
@@ -335,7 +335,7 @@ adk_netd_if_create_common(struct adk_netd_dev_create_params
 		 */
 		eth_hw_addr_random(netdev);
 	} else {
-		memcpy(netdev->dev_addr, dev_params->mac_addr, ETH_ALEN);
+		ether_address_set(netdev, dev_params->mac_addr);
 	}
 	pk_trace(NETD_INIT, "mac addr: %pM\n", netdev->dev_addr);
 
@@ -354,7 +354,7 @@ adk_netd_if_create_common(struct adk_netd_dev_create_params
 		netdev->type = ARPHRD_NONE;
 		netdev->flags = IFF_POINTOPOINT | IFF_NOARP | IFF_MULTICAST;
 
-		memcpy(netdev->dev_addr, "\0DUMMY", ETH_ALEN);
+		ether_address_set(netdev, "\0DUMMY");
 	}
 
 	netdev->max_mtu = max_mtu;
-- 
2.39.3

