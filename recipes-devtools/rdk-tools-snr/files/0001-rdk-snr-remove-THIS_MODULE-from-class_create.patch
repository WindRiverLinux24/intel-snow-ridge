From 69f3bbf7d48c085b23a3bbf39359843a69fc0d45 Mon Sep 17 00:00:00 2001
From: Yongxin Liu <yongxin.liu@windriver.com>
Date: Thu, 13 Jun 2024 10:26:09 +0000
Subject: [PATCH 01/24] rdk/snr: remove THIS_MODULE from class_create()

THIS_MODULE was removed in kernel commit 1aaba11da9aa
("driver core: class: remove module * from class_create()").

Upstream-Status: Inappropriate [RDK is released in tarball only]

Signed-off-by: Yongxin Liu <yongxin.liu@windriver.com>
---
 klm/cpk-ae/ice_sw_ae_main.c                                   | 2 +-
 klm/hqm/hqm/linux/dlb_main.c                                  | 2 +-
 klm/qat/inline/ipsec_cdev.c                                   | 2 +-
 klm/qat/qat/drivers/crypto/qat/qat_common/adf_ctl_drv.c       | 2 +-
 klm/qat/qat/drivers/crypto/qat/qat_common/adf_dev_processes.c | 2 +-
 klm/qat/qat/drivers/crypto/qat/qat_common/qat_dbg_drv.c       | 2 +-
 klm/qat/usdm/qae_mem_drv.c                                    | 2 +-
 7 files changed, 7 insertions(+), 7 deletions(-)

diff --git a/klm/cpk-ae/ice_sw_ae_main.c b/klm/cpk-ae/ice_sw_ae_main.c
index 44bd220..9a350ee 100644
--- a/klm/cpk-ae/ice_sw_ae_main.c
+++ b/klm/cpk-ae/ice_sw_ae_main.c
@@ -2985,7 +2985,7 @@ static int __init ice_sw_ae_init_module(void)
 	}
 
 	/* Create class */
-	ae_class = class_create(THIS_MODULE, "ice_sw_app_ext");
+	ae_class = class_create("ice_sw_app_ext");
 
 	if (!ae_class) {
 		pr_err("%s: class_create() returned %ld\n",
diff --git a/klm/hqm/hqm/linux/dlb_main.c b/klm/hqm/hqm/linux/dlb_main.c
index 8835c72..a7862aa 100644
--- a/klm/hqm/hqm/linux/dlb_main.c
+++ b/klm/hqm/hqm/linux/dlb_main.c
@@ -1482,7 +1482,7 @@ static int __init dlb_init_module(void)
 		DLB_VERSION_REVISION_NUMBER);
 	pr_info("%s\n", dlb_driver_copyright);
 
-	dlb_class = class_create(THIS_MODULE, dlb_driver_name);
+	dlb_class = class_create(dlb_driver_name);
 
 	if (!dlb_class) {
 		pr_err("%s: class_create() returned %ld\n",
diff --git a/klm/qat/inline/ipsec_cdev.c b/klm/qat/inline/ipsec_cdev.c
index 2b67b9d..04692d0 100644
--- a/klm/qat/inline/ipsec_cdev.c
+++ b/klm/qat/inline/ipsec_cdev.c
@@ -137,7 +137,7 @@ static int ipsec_chr_drv_create(void)
 	}
 
 	ipsec_processes_drv_info.drv_class =
-		class_create(THIS_MODULE, IPSEC_DEV_PROCESSES_NAME);
+		class_create(IPSEC_DEV_PROCESSES_NAME);
 	if (IS_ERR(ipsec_processes_drv_info.drv_class)) {
 		IPSEC_PR_ERR("Class_create failed for ipsec\n");
 		goto err_chrdev_unreg;
diff --git a/klm/qat/qat/drivers/crypto/qat/qat_common/adf_ctl_drv.c b/klm/qat/qat/drivers/crypto/qat/qat_common/adf_ctl_drv.c
index 2a07f99..45cac21 100644
--- a/klm/qat/qat/drivers/crypto/qat/qat_common/adf_ctl_drv.c
+++ b/klm/qat/qat/drivers/crypto/qat/qat_common/adf_ctl_drv.c
@@ -157,7 +157,7 @@ static int adf_chr_drv_create(void)
 		return -EFAULT;
 	}
 
-	adf_ctl_drv.drv_class = class_create(THIS_MODULE, DEVICE_NAME);
+	adf_ctl_drv.drv_class = class_create(DEVICE_NAME);
 	if (IS_ERR(adf_ctl_drv.drv_class)) {
 		pr_err("QAT: class_create failed for adf_ctl\n");
 		goto err_chrdev_unreg;
diff --git a/klm/qat/qat/drivers/crypto/qat/qat_common/adf_dev_processes.c b/klm/qat/qat/drivers/crypto/qat/qat_common/adf_dev_processes.c
index 08e5bea..e356b5e 100644
--- a/klm/qat/qat/drivers/crypto/qat/qat_common/adf_dev_processes.c
+++ b/klm/qat/qat/drivers/crypto/qat/qat_common/adf_dev_processes.c
@@ -83,7 +83,7 @@ static int adf_chr_drv_create(void)
 	}
 
 	adf_processes_drv_info.drv_class =
-		class_create(THIS_MODULE, ADF_DEV_PROCESSES_NAME);
+		class_create(ADF_DEV_PROCESSES_NAME);
 	if (IS_ERR(adf_processes_drv_info.drv_class)) {
 		pr_err("QAT: class_create failed for adf_ctl\n");
 		goto err_chrdev_unreg;
diff --git a/klm/qat/qat/drivers/crypto/qat/qat_common/qat_dbg_drv.c b/klm/qat/qat/drivers/crypto/qat/qat_common/qat_dbg_drv.c
index 1868f36..d90542d 100644
--- a/klm/qat/qat/drivers/crypto/qat/qat_common/qat_dbg_drv.c
+++ b/klm/qat/qat/drivers/crypto/qat/qat_common/qat_dbg_drv.c
@@ -405,7 +405,7 @@ static int qat_dbg_chr_drv_create(void)
 		return -EFAULT;
 	}
 
-	qatd_drv.drv_class = class_create(THIS_MODULE, QATD_DEVICE_NAME);
+	qatd_drv.drv_class = class_create(QATD_DEVICE_NAME);
 	if (IS_ERR(qatd_drv.drv_class)) {
 		pr_err("QAT: class_create failed for qat_dbg\n");
 		goto err_chrdev_unreg;
diff --git a/klm/qat/usdm/qae_mem_drv.c b/klm/qat/usdm/qae_mem_drv.c
index e62baf2..113568c 100644
--- a/klm/qat/usdm/qae_mem_drv.c
+++ b/klm/qat/usdm/qae_mem_drv.c
@@ -1166,7 +1166,7 @@ chr_drv_create_class(chr_drv_info_t* drv_info)
                      "chr_drv_create_class(): Invalid parameter value ",
                      -EINVAL);
 
-    drv_info->drv_class = class_create(THIS_MODULE, drv_info->name);
+    drv_info->drv_class = class_create(drv_info->name);
     if (IS_ERR(drv_info->drv_class))
     {
         mm_err("%s:%d class_create failed\n",__func__,__LINE__);
-- 
2.39.3

